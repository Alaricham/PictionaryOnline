{"ast":null,"code":"import _classCallCheck from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alarich/Documents/languagePictionary/frontend/src/components/InputBox.js\";\nimport React, { Component } from 'react';\n\nvar InputBox =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(InputBox, _Component);\n\n  function InputBox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, InputBox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(InputBox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      inputBox: ''\n    };\n\n    _this.liftMsg = function (text) {\n      _this.props.submitMessage(text);\n    };\n\n    _this.submitText = function (event) {\n      if (event.key === \"Enter\" && event.target.value !== '') {\n        _this.setState({\n          inputBox: ''\n        });\n\n        _this.liftMsg(event.target.value);\n      }\n    };\n\n    _this.updateInput = function (event) {\n      _this.setState({\n        inputBox: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(InputBox, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"inputBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        disabled: this.props.lock,\n        placeholder: this.props.lock ? 'Chatting disabled until next turn' : 'Type your guess or chat',\n        onChange: this.updateInput,\n        onKeyPress: this.submitText,\n        value: this.state.inputBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return InputBox;\n}(Component);\n\nexport default InputBox;","map":{"version":3,"sources":["/home/alarich/Documents/languagePictionary/frontend/src/components/InputBox.js"],"names":["React","Component","InputBox","state","inputBox","liftMsg","text","props","submitMessage","submitText","event","key","target","value","setState","updateInput","lock"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,Q;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,K;;UAERC,O,GAAU,UAACC,IAAD,EAAU;AAChB,YAAKC,KAAL,CAAWC,aAAX,CAAyBF,IAAzB;AACH,K;;UAEDG,U,GAAa,UAACC,KAAD,EAAW;AACpB,UAAIA,KAAK,CAACC,GAAN,KAAc,OAAd,IAAyBD,KAAK,CAACE,MAAN,CAAaC,KAAb,KAAuB,EAApD,EAAwD;AACpD,cAAKC,QAAL,CAAc;AAAEV,UAAAA,QAAQ,EAAE;AAAZ,SAAd;;AACA,cAAKC,OAAL,CAAaK,KAAK,CAACE,MAAN,CAAaC,KAA1B;AACH;AACJ,K;;UAEDE,W,GAAc,UAACL,KAAD,EAAW;AACrB,YAAKI,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAEM,KAAK,CAACE,MAAN,CAAaC;AAAzB,OAAd;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAK,QAAA,EAAE,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWS,IAA5B;AAAkC,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWS,IAAX,GAAkB,mCAAlB,GAAwD,yBAAvG;AAAkI,QAAA,QAAQ,EAAE,KAAKD,WAAjJ;AAA8J,QAAA,UAAU,EAAE,KAAKN,UAA/K;AAA2L,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,QAA7M;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ;AAKH;;;;EAxBkBH,S;;AA2BvB,eAAeC,QAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass InputBox extends Component {\n    state = { inputBox: '' }\n\n    liftMsg = (text) => {\n        this.props.submitMessage(text);\n    }\n\n    submitText = (event) => {\n        if (event.key === \"Enter\" && event.target.value !== '') {\n            this.setState({ inputBox: '' })\n            this.liftMsg(event.target.value);\n        }\n    }\n\n    updateInput = (event) => {\n        this.setState({ inputBox: event.target.value })\n    }\n\n    render() {\n        return (\n            <div id=\"inputBox\">\n                <input disabled={this.props.lock} placeholder={this.props.lock ? 'Chatting disabled until next turn' : 'Type your guess or chat'} onChange={this.updateInput} onKeyPress={this.submitText} value={this.state.inputBox}></input>\n            </div>\n        )\n    }\n}\n\nexport default InputBox;"]},"metadata":{},"sourceType":"module"}
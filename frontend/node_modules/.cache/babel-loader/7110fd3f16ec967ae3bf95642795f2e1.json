{"ast":null,"code":"import _classCallCheck from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/alarich/Documents/languagePictionary/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/alarich/Documents/languagePictionary/frontend/src/components/App.js\";\nimport React, { Component } from 'react';\nimport ChannelBox from './ChannelBox';\nimport Canvas from \"./Canvas\";\nimport Timer from './Timer';\nimport User from './User';\nimport InputBox from './InputBox';\nimport ChatBox from './ChatBox';\nimport { ChromePicker } from 'react-color';\nimport Slider from 'rc-slider';\nimport io from 'socket.io-client';\nimport '../stylesheets/root.css';\nimport '../stylesheets/App.css';\nimport '../stylesheets/UserInput.css';\nimport '../stylesheets/Menu.css';\nimport 'rc-slider/assets/index.css';\nvar socket = io.connect(\"http://localhost:3000/\");\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this));\n\n    _this.disconnect = function () {\n      _this.setState({\n        channel: null,\n        users: []\n      });\n\n      console.log('her');\n      socket.disconnect();\n    };\n\n    _this.displayWinner = function () {\n      if (_this.state.winnerDisplay.val) {\n        return React.createElement(\"div\", {\n          id: \"winner\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Winner \", _this.state.winnerDisplay.name, \"!\"));\n      }\n    };\n\n    _this.awaitingPlayers = function () {\n      if (_this.state.awaiting) {\n        return React.createElement(\"div\", {\n          id: \"awaitingPlayers\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, \"Awaiting Players...\"));\n      }\n    };\n\n    _this.submitMessage = function (text) {\n      _this.setState({\n        message: text\n      });\n\n      socket.emit('message', text);\n    };\n\n    _this.clearWin = function () {\n      _this.setState({\n        winnerDisplay: {\n          name: 'none',\n          val: false\n        }\n      });\n\n      console.log(_this.state.interval);\n      clearInterval(_this.state.interval);\n    };\n\n    _this.clearLift = function () {\n      _this.setState({\n        clear: false\n      });\n    };\n\n    _this.togglePallette = function (event) {\n      if (!_this.state.pallette.val) {\n        _this.setState({\n          pallette: {\n            val: true\n          }\n        });\n      } else {\n        _this.setState({\n          pallette: {\n            val: false\n          }\n        });\n      }\n    };\n\n    _this.toggleSlider = function (event) {\n      if (!_this.state.sliderTog.val && _this.state.atCanvas) {\n        _this.setState({\n          sliderTog: {\n            val: true\n          }\n        });\n      } else {\n        _this.setState({\n          sliderTog: {\n            val: false\n          }\n        });\n      }\n    };\n\n    _this.emitClear = function () {\n      socket.emit('clear');\n    };\n\n    _this.sendDrawData = function (data) {\n      socket.emit('drawing', data);\n    };\n\n    _this.inputName = function (event) {\n      if (event.key === 'Enter') {\n        _this.setState({\n          user: {\n            name: event.target.value\n          }\n        });\n      }\n    };\n\n    _this.setColor = function (color, event) {\n      if (_this.state.atCanvas) {\n        _this.setState({\n          color: color.hex\n        });\n      }\n    };\n\n    _this.strokeSize = function (value) {\n      _this.setState({\n        strokeSize: value\n      });\n    };\n\n    _this.renderChannel = function () {\n      var _this$state = _this.state,\n          user = _this$state.user,\n          channel = _this$state.channel;\n\n      if (user && channel) {\n        return React.createElement(\"div\", {\n          id: \"layout\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 187\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col box1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 188\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"row\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"col set\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190\n          },\n          __self: this\n        }, React.createElement(Canvas, {\n          clearLift: _this.clearLift,\n          strokeSize: _this.state.strokeSize,\n          clear: _this.state.clear,\n          atCanvas: _this.state.atCanvas,\n          sendDrawData: _this.sendDrawData,\n          drawData: _this.state.drawData,\n          color: _this.state.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          id: \"sideMenu\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 192\n          },\n          __self: this\n        }, _this.state.sliderTog.val && React.createElement(\"div\", {\n          id: \"slider\",\n          onMouseLeave: function onMouseLeave() {\n            return _this.setState({\n              sliderTog: {\n                val: false\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 193\n          },\n          __self: this\n        }, React.createElement(Slider, {\n          vertical: true,\n          onChange: _this.strokeSize,\n          min: 1,\n          max: 100,\n          value: _this.state.strokeSize,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 194\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"color\",\n          onClick: _this.togglePallette,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-palette\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          id: \"chromePicker\",\n          onMouseLeave: function onMouseLeave() {\n            return _this.setState({\n              pallette: {\n                val: false\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, _this.state.pallette.val && React.createElement(ChromePicker, {\n          onChangeComplete: _this.setColor,\n          color: _this.state.color,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          id: \"stroke\",\n          onClick: _this.toggleSlider,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-sort-numeric-up\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }), React.createElement(\"i\", {\n          className: \"fas fa-paint-brush\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          id: \"clear\",\n          onClick: _this.emitClear,\n          disabled: !_this.state.lock,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fas fa-trash-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210\n          },\n          __self: this\n        })))), React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"timerBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215\n          },\n          __self: this\n        }, React.createElement(Timer, {\n          timer: _this.state.timer,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 216\n          },\n          __self: this\n        }), React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, \"Round \", _this.state.round)), _this.state.atCanvas && React.createElement(\"div\", {\n          id: \"wordInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, _this.state.word)))), React.createElement(InputBox, {\n          submitMessage: _this.submitMessage,\n          lock: _this.state.lock,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        })), _this.displayWinner(), _this.awaitingPlayers(), \";\", React.createElement(\"div\", {\n          className: \"col box2\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          id: \"userInfo\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, _this.state.user.name), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, \"Score: \", _this.state.points), React.createElement(\"button\", {\n          className: \"btn\",\n          onClick: _this.disconnect,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, \"Disconnect\")), React.createElement(\"div\", {\n          id: \"userList\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, _this.displayUsers(_this.state.users)), React.createElement(ChatBox, {\n          log: _this.state.log,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }))));\n      }\n    };\n\n    _this.renderUserInput = function () {\n      if (!_this.state.user.name) {\n        return React.createElement(User, {\n          inputName: _this.inputName,\n          user: _this.state.user,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.renderChannelBox = function () {\n      if (!_this.state.channel && _this.state.user.name) {\n        socket.connect();\n        return React.createElement(ChannelBox, {\n          socket: socket,\n          user: _this.state.user,\n          inChannel: _this.inChannel,\n          users: _this.state.users,\n          displayUsers: _this.displayUsers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.inChannel = function (channel) {\n      _this.setState({\n        channel: channel\n      });\n    };\n\n    _this.displayUsers = function (users) {\n      if (users) {\n        var mappedUsers = users.map(function (user, index) {\n          return React.createElement(\"li\", {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269\n            },\n            __self: this\n          }, user);\n        });\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 271\n          },\n          __self: this\n        }, mappedUsers);\n      }\n    };\n\n    _this.state = {\n      awaiting: true,\n      message: '',\n      log: [],\n      drawData: {},\n      user: {},\n      channel: null,\n      word: false,\n      timer: 120000,\n      round: 1,\n      atCanvas: false,\n      points: 0,\n      clear: false,\n      winnerDisplay: {\n        name: 'none',\n        val: false\n      },\n      users: [],\n      color: 'black',\n      strokeSize: 1,\n      lock: false,\n      interval: null,\n      pallette: {\n        val: false\n      },\n      sliderTog: {\n        val: false\n      }\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      socket.on('new message', function (data) {\n        _this2.setState({\n          log: _this2.state.log.concat(data)\n        });\n      });\n      socket.on('new drawing', function (data) {\n        _this2.setState({\n          drawData: data.drawData\n        });\n      });\n      socket.on('wordGuess', function (data) {\n        _this2.setState({\n          word: data,\n          lock: true\n        });\n      });\n      socket.on('timer', function (data) {\n        _this2.setState({\n          timer: data\n        });\n      });\n      socket.on('noCanvas', function () {\n        _this2.setState({\n          atCanvas: false\n        });\n      });\n      socket.on('userAtCanvas', function () {\n        _this2.setState({\n          atCanvas: true,\n          lock: true\n        });\n      });\n      socket.on('round', function (data) {\n        _this2.setState({\n          round: data,\n          lock: false\n        });\n      });\n      socket.on('guess', function (data) {\n        _this2.setState({\n          points: data,\n          lock: true\n        });\n      });\n      socket.on('correctGuess', function (data) {\n        _this2.setState({\n          log: _this2.state.log.concat(data)\n        });\n      });\n      socket.on('restart', function () {\n        _this2.setState({\n          points: 0,\n          log: [],\n          clear: true,\n          awaiting: false\n        });\n      });\n      socket.on('winner', function (data) {\n        var winAnim = setInterval(_this2.clearWin, 6000);\n\n        _this2.setState({\n          interval: winAnim,\n          winnerDisplay: {\n            name: data,\n            val: true\n          }\n        });\n      });\n      socket.on('userList', function (data) {\n        _this2.setState({\n          users: data\n        });\n      });\n      socket.on('clear', function () {\n        _this2.setState({\n          clear: true\n        });\n      });\n      socket.on('awaiting', function () {\n        _this2.setState({\n          awaiting: true\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, this.renderUserInput(), this.renderChannelBox(), this.renderChannel());\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/alarich/Documents/languagePictionary/frontend/src/components/App.js"],"names":["React","Component","ChannelBox","Canvas","Timer","User","InputBox","ChatBox","ChromePicker","Slider","io","socket","connect","App","disconnect","setState","channel","users","console","log","displayWinner","state","winnerDisplay","val","name","awaitingPlayers","awaiting","submitMessage","text","message","emit","clearWin","interval","clearInterval","clearLift","clear","togglePallette","event","pallette","toggleSlider","sliderTog","atCanvas","emitClear","sendDrawData","data","inputName","key","user","target","value","setColor","color","hex","strokeSize","renderChannel","drawData","lock","timer","round","word","points","displayUsers","renderUserInput","renderChannelBox","inChannel","mappedUsers","map","index","on","concat","winAnim","setInterval"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ChannelBox from './ChannelBox'\nimport Canvas from \"./Canvas\";\nimport Timer from './Timer';\nimport User from './User';\nimport InputBox from './InputBox';\nimport ChatBox from './ChatBox';\nimport { ChromePicker } from 'react-color';\nimport Slider from 'rc-slider';\nimport io from 'socket.io-client';\nimport '../stylesheets/root.css';\nimport '../stylesheets/App.css';\nimport '../stylesheets/UserInput.css';\nimport '../stylesheets/Menu.css'\nimport 'rc-slider/assets/index.css'\n\nconst socket = io.connect(\"http://localhost:3000/\");\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            awaiting: true,\n            message: '',\n            log: [],\n            drawData: {},\n            user: {},\n            channel: null,\n            word: false,\n            timer: 120000,\n            round: 1,\n            atCanvas: false,\n            points: 0,\n            clear: false,\n            winnerDisplay: { name: 'none', val: false },\n            users: [],\n            color: 'black',\n            strokeSize: 1,\n            lock: false,\n            interval: null,\n            pallette: { val: false },\n            sliderTog: { val: false }\n        }\n    }\n\n    disconnect = () => {\n        this.setState({ channel: null, users: [] });\n        console.log('her')\n        socket.disconnect()\n    }\n\n    displayWinner = () => {\n        if (this.state.winnerDisplay.val) {\n            return (<div id='winner'>\n                <h1>Winner {this.state.winnerDisplay.name}!</h1>\n            </div>)\n        }\n    }\n\n    awaitingPlayers = () => {\n        if (this.state.awaiting) {\n            return (<div id='awaitingPlayers'>\n                <h1>Awaiting Players...</h1>\n            </div>)\n        }\n    }\n\n    submitMessage = (text) => {\n        this.setState({ message: text });\n        socket.emit('message', text);\n    }\n\n    componentDidMount() {\n        socket.on('new message', (data) => {\n            this.setState({ log: this.state.log.concat(data) })\n        })\n\n        socket.on('new drawing', (data) => {\n            this.setState({ drawData: data.drawData })\n        })\n        socket.on('wordGuess', (data) => {\n            this.setState({ word: data, lock: true })\n        })\n\n        socket.on('timer', (data) => {\n            this.setState({ timer: data })\n        })\n\n        socket.on('noCanvas', () => {\n            this.setState({ atCanvas: false })\n        })\n\n        socket.on('userAtCanvas', () => {\n            this.setState({ atCanvas: true, lock: true })\n        })\n\n        socket.on('round', (data) => {\n            this.setState({ round: data, lock: false })\n        })\n\n        socket.on('guess', (data) => {\n            this.setState({ points: data, lock: true })\n        })\n\n        socket.on('correctGuess', (data) => {\n            this.setState({ log: this.state.log.concat(data) })\n        })\n\n        socket.on('restart', () => {\n            this.setState({ points: 0, log: [], clear: true, awaiting: false })\n        })\n\n        socket.on('winner', data => {\n            let winAnim = setInterval(this.clearWin, 6000);\n            this.setState({ interval: winAnim, winnerDisplay: { name: data, val: true } })\n        })\n\n        socket.on('userList', data => {\n            this.setState({ users: data })\n        })\n        socket.on('clear', () => {\n            this.setState({ clear: true })\n        })\n\n        socket.on('awaiting', () => {\n            this.setState({ awaiting: true })\n        })\n\n    }\n\n    clearWin = () => {\n        this.setState({ winnerDisplay: { name: 'none', val: false } });\n        console.log(this.state.interval)\n        clearInterval(this.state.interval)\n    }\n\n\n    clearLift = () => {\n        this.setState({ clear: false });\n    }\n\n    togglePallette = (event) => {\n        if (!this.state.pallette.val) {\n            this.setState({ pallette: { val: true } })\n        } else {\n            this.setState({ pallette: { val: false } })\n        }\n    }\n\n    toggleSlider = (event) => {\n        if (!this.state.sliderTog.val && this.state.atCanvas) {\n            this.setState({ sliderTog: { val: true } })\n        } else {\n            this.setState({ sliderTog: { val: false } })\n        }\n    }\n\n    emitClear = () => {\n        socket.emit('clear');\n    }\n\n    sendDrawData = (data) => {\n        socket.emit('drawing', data);\n    }\n\n    inputName = (event) => {\n        if (event.key === 'Enter') {\n            this.setState({ user: { name: event.target.value } })\n        }\n    }\n\n    setColor = (color, event) => {\n        if (this.state.atCanvas) {\n            this.setState({ color: color.hex })\n        }\n    }\n\n    strokeSize = (value) => {\n        this.setState({ strokeSize: value });\n    }\n\n    renderChannel = () => {\n        const { user, channel } = this.state;\n        if (user && channel) {\n            return (\n                <div id=\"layout\">\n                    <div className=\"row\">\n                        <div className=\"col box1\">\n                            <div className='row'>\n                                <div className=\"col set\">\n                                    <Canvas clearLift={this.clearLift} strokeSize={this.state.strokeSize} clear={this.state.clear} atCanvas={this.state.atCanvas} sendDrawData={this.sendDrawData} drawData={this.state.drawData} color={this.state.color} />\n                                    <div id=\"sideMenu\">\n                                        {this.state.sliderTog.val && <div id='slider' onMouseLeave={() => this.setState({ sliderTog: { val: false } })}>\n                                            <Slider vertical={true} onChange={this.strokeSize} min={1} max={100} value={this.state.strokeSize} />\n                                        </div>}\n                                        <div id=\"color\" onClick={this.togglePallette}>\n                                            <i className=\"fas fa-palette\"></i>\n                                            <div id='chromePicker' onMouseLeave={() => this.setState({ pallette: { val: false } })} >\n                                                {this.state.pallette.val && <ChromePicker\n                                                    onChangeComplete={this.setColor}\n                                                    color={this.state.color}\n                                                />}\n                                            </div>\n                                        </div>\n                                        <div id=\"stroke\" onClick={this.toggleSlider}>\n                                            <i className=\"fas fa-sort-numeric-up\"></i>\n                                            <i className=\"fas fa-paint-brush\"></i>\n                                        </div>\n                                        <div id=\"clear\" onClick={this.emitClear} disabled={!this.state.lock}>\n                                            <i className=\"fas fa-trash-alt\"></i>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col\">\n                                    <div id=\"timerBox\">\n                                        <Timer timer={this.state.timer} />\n                                        <h2>Round {this.state.round}</h2>\n                                    </div>\n                                    {this.state.atCanvas &&\n                                        <div id=\"wordInfo\">\n                                            <h1>{this.state.word}</h1>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            <InputBox submitMessage={this.submitMessage} lock={this.state.lock} />\n                        </div>\n                        {this.displayWinner()}\n                        {this.awaitingPlayers()};\n                        <div className=\"col box2\">\n                            <div id='userInfo'>\n                                <h2>{this.state.user.name}</h2>\n                                <h3>Score: {this.state.points}</h3>\n                                <button className=\"btn\" onClick={this.disconnect}>Disconnect</button>\n                            </div>\n                            <div id=\"userList\">\n                                {this.displayUsers(this.state.users)}\n                            </div>\n                            <ChatBox log={this.state.log} />\n                        </div>\n\n                    </div>\n                </div>\n\n            )\n        }\n    }\n\n    renderUserInput = () => {\n        if (!this.state.user.name) {\n            return <User inputName={this.inputName} user={this.state.user} />\n        }\n    }\n\n    renderChannelBox = () => {\n        if (!this.state.channel && this.state.user.name) {\n            socket.connect()\n            return <ChannelBox socket={socket} user={this.state.user} inChannel={this.inChannel} users={this.state.users} displayUsers={this.displayUsers} />\n        }\n    }\n\n    inChannel = (channel) => {\n        this.setState({ channel: channel })\n    }\n\n    displayUsers = (users) => {\n        if (users) {\n            let mappedUsers = users.map((user, index) => {\n                return (<li key={index}>{user}</li>)\n            })\n            return (<ul>{mappedUsers}</ul>)\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                {this.renderUserInput()}\n                {this.renderChannelBox()}\n                {this.renderChannel()}\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}